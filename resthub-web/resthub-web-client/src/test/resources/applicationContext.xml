<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/security/oauth2
        http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <context:annotation-config />
    <context:component-scan base-package="org.resthub.web.oauth2" />

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service>
                <security:user name="test" password="t3st" authorities="ROLE_USER" />
                <security:user name="admin" password="4dm|n" authorities="ROLE_USER, ROLE_ADMIN" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http pattern="/oauth/token" create-session="never" authentication-manager-ref="clientAuthenticationManager">
        <security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
        <security:anonymous enabled="false" />
        <security:http-basic />
        <!-- include this only if you need to authenticate clients via request parameters -->
        <security:custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
    </security:http>

    <bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.filter.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="clientAuthenticationManager" />
    </bean>

    <mvc:annotation-driven />

    <bean id="entryPoint" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAuthenticationEntryPoint">
        <property name="realmName" value="test" />
    </bean>

    <security:http entry-point-ref="entryPoint" create-session="never">
        <security:intercept-url pattern="/api/resource/ping" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/api/resource/hello" access="ROLE_USER" />
        <security:intercept-url pattern="/api/resource/goodbye" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/oauth/authorize" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/oauth/**" access="ROLE_USER" />
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:access-denied-handler ref="oauth2AccessDeniedHandler" />
        <security:custom-filter ref="resourceServerFilter" before="EXCEPTION_TRANSLATION_FILTER" />
    </security:http>

    <bean id="oauth2AccessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl" />

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.RandomValueTokenServices">
        <property name="tokenStore">
            <bean class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />
        </property>
        <property name="supportRefreshToken" value="false" />
    </bean>

    <oauth2:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth2:password />
    </oauth2:authorization-server>

    <oauth2:client-details-service id="clientDetails" >
        <oauth2:client client-id="test" resource-ids="resthub" authorized-grant-types="password" />
    </oauth2:client-details-service>

    <bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails" />
    </bean>

    <authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
        <authentication-provider user-service-ref="clientDetailsUserService" />
    </authentication-manager>

    <oauth2:resource-server id="resourceServerFilter" resource-id="resthub" token-services-ref="tokenServices" />

</beans>
